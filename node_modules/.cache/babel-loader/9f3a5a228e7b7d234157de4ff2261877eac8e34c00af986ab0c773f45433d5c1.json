{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst useHttp = (requestConfig, applyData) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = async taskText => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.header ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n  return {\n    isLoading: isLoading,\n    error: error,\n    sendRequest: sendRequest\n  };\n};\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\nexport default useHttp;","map":{"version":3,"names":["useState","useHttp","requestConfig","applyData","isLoading","setIsLoading","error","setError","sendRequest","taskText","response","fetch","url","method","headers","header","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["C:/Users/arfai/OneDrive/Desktop/TypeScriptProjects/tasks-UsingCustomHttpHook/tasksfolder/src/components/hooks/use-http.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useHttp=(requestConfig,applyData)=>{\r\n    const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n\r\n  const sendRequest = async (taskText) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\r\n       requestConfig.url,{\r\n        method: requestConfig.method ? requestConfig.method : 'GET',\r\n        headers: requestConfig.header ? requestConfig.headers:{},\r\n        body: requestConfig.body ? JSON .stringify(requestConfig.body): null\r\n       }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Request failed!');\r\n      }\r\n\r\n      const data = await response.json();\r\n      applyData(data);\r\n      \r\n    } catch (err) {\r\n      setError(err.message || 'Something went wrong!');\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n  return {\r\n    isLoading: isLoading,\r\n    error:error,\r\n    sendRequest:sendRequest\r\n    }\r\n}\r\n\r\n\r\nexport default useHttp;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,OAAO,GAAC,CAACC,aAAa,EAACC,SAAS,KAAG;EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAGxC,MAAMQ,WAAW,GAAG,MAAOC,QAAQ,IAAK;IACtCJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAC3BT,aAAa,CAACU,GAAG,EAAC;QACjBC,MAAM,EAAEX,aAAa,CAACW,MAAM,GAAGX,aAAa,CAACW,MAAM,GAAG,KAAK;QAC3DC,OAAO,EAAEZ,aAAa,CAACa,MAAM,GAAGb,aAAa,CAACY,OAAO,GAAC,CAAC,CAAC;QACxDE,IAAI,EAAEd,aAAa,CAACc,IAAI,GAAGC,IAAI,CAAEC,SAAS,CAAChB,aAAa,CAACc,IAAI,CAAC,GAAE;MACjE,CAAC,CACD;MAED,IAAI,CAACN,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,EAAE;MAClCnB,SAAS,CAACkB,IAAI,CAAC;IAEjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAnB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EACD,OAAO;IACLD,SAAS,EAAEA,SAAS;IACpBE,KAAK,EAACA,KAAK;IACXE,WAAW,EAACA;EACZ,CAAC;AACL,CAAC;AAAA,GAlCKP,OAAO;AAqCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}